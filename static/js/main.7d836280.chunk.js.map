{"version":3,"sources":["components/Header.js","components/Search.js","components/Todo.js","components/TodoList.js","components/Firebase.js","components/AddTodo.js","components/EditTodo.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","className","Component","Search","btnAddClick","_this","props","_this2","this","onClick","title","type","placeholder","Todo","btnEditClick","event","stopPropagation","data","btnRemoveClick","todoClick","item","job","note","priority","completed","index","toUpperCase","substring","lenght","aria-hidden","TodoList","width","map","value","key","components_Todo","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","AddTodo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isChanged","name","target","setState","defineProperty","state","btnAddTodoClick","ref","push","toggleAddDialog","btnCancelClick","htmlFor","onChange","aria-describedby","EditTodo","toggleEditDialog","App","reUpdateDatabase","on","notes","arrayData","forEach","element","val","objectSpread","todos","dim_screen","isAddTodo","isEditTodo","concat","toConsumableArray","renderDialogAdd","components_AddTodo","renderDialogEdit","editItemId","components_EditTodo","getEditData","child","update","console","log","remove","filter","components_Header","Search_Search","components_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d836280.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"header\" className=\"jumbotron jumbotron-fluid text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-3\">Todo List</h1>\r\n                    <p className=\"lead\">A todo list using ReactJS</p>\r\n                    <hr className=\"my-2\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nexport default class Search extends Component {\r\n    btnAddClick = () => {\r\n        this.props.btnAddClick();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"comp-utility-search back-dark mb-3\">\r\n                <div className=\"utility\">\r\n                    <button className=\"btn btn-primary\" onClick={() => this.btnAddClick()} title=\"Add new todo\">Add todo</button>\r\n                </div>\r\n\r\n                <form className=\"form-search\">\r\n                    <div className=\"search-box\">\r\n                        <div className=\"wrapper\">\r\n                            <input type=\"search\" placeholder=\"Search\"/>\r\n                        </div>\r\n                        <button className=\"btn btn-outline-success ml-2\">Search</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n\r\n    btnEditClick = (event) => {\r\n        event.stopPropagation();\r\n        let id = this.props.data.id;\r\n        this.props.btnEditClick(id);\r\n    }\r\n\r\n    btnRemoveClick = (event) => {\r\n        event.stopPropagation();\r\n        let id = this.props.data.id;\r\n        this.props.btnRemoveClick(id);\r\n    }\r\n\r\n    todoClick = () => {\r\n        let item = {\r\n            id : this.props.data.id,\r\n            job : this.props.data.job,\r\n            note : this.props.data.note,\r\n            priority : this.props.data.priority,\r\n            completed : !this.props.data.completed,\r\n        }\r\n        this.props.todoClick(item);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.data);\r\n        return (\r\n            <tr onClick={() => this.todoClick()} className={this.props.data.completed === true ? \"completed\" : \"\"}>\r\n                <td>{this.props.index + 1}</td>\r\n                <td>{this.props.data.job}</td>\r\n                <td>{this.props.data.note}</td>\r\n                <td>\r\n                    <div className={\"priority \" + this.props.data.priority}>{this.props.data.priority[0].toUpperCase() + this.props.data.priority.substring(1, this.props.data.priority.lenght)}</div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"form-group mb-0\">\r\n                        {\r\n                            this.props.data.completed === false ? (<button className=\"btn btn-warning mr-2\" title=\"Edit this todo\" onClick={(event) => this.btnEditClick(event)}>\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\"></i>\r\n                        </button>) : null\r\n                        }\r\n\r\n                        <button className=\"btn btn-danger\" title=\"Remove this todo\" onClick={(event) => this.btnRemoveClick(event)}>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass TodoList extends Component {\r\n    btnEditClick = (id) => {\r\n        this.props.btnEditClick(id);\r\n    }\r\n\r\n    btnRemoveClick = (id) => {\r\n        this.props.btnRemoveClick(id);\r\n    }\r\n\r\n    todoClick = (item) => {\r\n\t\tthis.props.todoClick(item);\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"todos-list text-center table table-bordered table-inverse table-hover\">\r\n                <caption>Table todo list</caption>\r\n                <colgroup>\r\n                    <col width=\"5%\" />\r\n                    <col width=\"40%\" />\r\n                    <col width=\"30%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"15%\" />\r\n                </colgroup>\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Job</th>\r\n                        <th>Note</th>\r\n                        <th>Priority</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.data.map((value, key) => \r\n                            <Todo \r\n                                index={key} \r\n                                key={key} \r\n                                data={value}\r\n                                btnEditClick={(id) => this.btnEditClick(id)}\r\n                                btnRemoveClick={(id) => this.btnRemoveClick(id)}\r\n                                todoClick={(item) => this.todoClick(item)}/>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","var firebase = require('firebase');\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyDzdsOZSXW3Gn7KbJ6_UZ1UlV56pUcWLGg\",\r\n    authDomain: \"note-react-1998.firebaseapp.com\",\r\n    databaseURL: \"https://note-react-1998.firebaseio.com\",\r\n    projectId: \"note-react-1998\",\r\n    storageBucket: \"note-react-1998.appspot.com\",\r\n    messagingSenderId: \"974356818032\"\r\n  };\r\n  \r\n  firebase.initializeApp(config);\r\n\r\n  export const database = firebase.database();","import React, { Component } from 'react';\r\nimport {database} from './Firebase';\r\n\r\n\r\nclass AddTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id : '',\r\n            job : '',\r\n            note : '',\r\n            priority : 'low',\r\n            completed : false\r\n        }\r\n    }\r\n\r\n    isChanged = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    btnAddClick = () => {\r\n        let item = {\r\n            job : this.state.job,\r\n            note : this.state.note,\r\n            priority : this.state.priority,\r\n            completed : false\r\n        }\r\n\r\n        // gui du lieu lai len app\r\n        this.props.btnAddTodoClick(item);\r\n\r\n        // gui du lieu len firebase\r\n        let db = database.ref('Notes/');\r\n        db.push(item);\r\n\r\n        // clear state\r\n        this.setState({\r\n            id : '',\r\n            job : '',\r\n            note : '',\r\n            priority : '',\r\n            completed : false\r\n        })\r\n\r\n        this.props.toggleAddDialog();\r\n    }\r\n    \r\n    btnCancelClick = () => {\r\n        this.props.toggleAddDialog();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editTodo\">\r\n                <h3 className=\"text-center\">Add new todo</h3>\r\n                \r\n                <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"job\" >Todo name:</label>\r\n                    <input value={this.state.job} onChange={(event) => this.isChanged(event)} name=\"job\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Job\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"note\" >Note:</label>\r\n                    <textarea value={this.state.note} onChange={(event) => this.isChanged(event)} name=\"note\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Note\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"priority\" >Priority:</label>\r\n                    <select value={this.state.priority} onChange={(event) => this.isChanged(event)} className=\"form-control\" name=\"priority\">\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"hight\">Hight</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group text-center mb-0\">\r\n                    <button type=\"reset\" className=\"btn btn-primary mr-2\" onClick={() => this.btnAddClick()}>Add</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => this.btnCancelClick()}>Cancel</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React, { Component } from 'react';\r\n\r\nclass EditTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            id : this.props.data.id,\r\n            job : this.props.data.job,\r\n            note : this.props.data.note,\r\n            priority : this.props.data.priority,\r\n            completed : this.props.data.completed\r\n        }\r\n    }\r\n    \r\n    btnCancelClick = () => {\r\n        this.props.toggleEditDialog();\r\n    }\r\n\r\n    btnEditClick = () => {\r\n        let item = this.state;\r\n        this.props.btnEditClick(item);\r\n        this.props.toggleEditDialog();\r\n    }\r\n\r\n    isChanged = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editTodo\">\r\n                <h3 className=\"text-center\">Edit todo</h3>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"job\" >Todo name:</label>\r\n                    <input value={this.state.job} onChange={(event) => this.isChanged(event)} name=\"job\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Job\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"note\" >Note:</label>\r\n                    <textarea value={this.state.note} onChange={(event) => this.isChanged(event)} name=\"note\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Note\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"priority\" >Priority:</label>\r\n                    <select value={this.state.priority} onChange={(event) => this.isChanged(event)} className=\"form-control\" name=\"priority\">\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"hight\">Hight</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group text-center mb-0\">\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => this.btnEditClick()}>Edit</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => this.btnCancelClick()}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditTodo;","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport Header from './Header';\nimport Search from './Search';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport EditTodo from './EditTodo';\n\nimport {database} from './Firebase';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttodos: [],\n\n\t\t\tisAddTodo: false,\n\n\t\t\tisEditTodo: false\n\t\t}\n\t}\n\n\treUpdateDatabase = () => {\n\t\tlet db = database.ref('Notes/');\n\t\tdb.on('value', notes => {\n\t\t\tlet arrayData = [];\n\t\t\tnotes.forEach(element => {\n\t\t\t\tconst key = element.key;\n\t\t\t\tconst val = element.val();\n\t\t\t\t\n\t\t\t\tlet item = {...val, id : key};\n\n\t\t\t\tarrayData.push(item);\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\ttodos : arrayData\n\t\t\t})\n\t\t})\n\t}\n\n\tdim_screen = () => {\n\t\treturn this.state.isAddTodo === true || this.state.isEditTodo === true ? \"\" : \" hidden\";\n\t}\n\n\t// =========================== ADD TODO ===============================\n\n\ttoggleAddDialog = () => {\n\t\tthis.setState({\n\t\t\tisAddTodo: !this.state.isAddTodo\n\t\t})\n\t}\n\n\tbtnAddTodoClick = item => {\n\t\tthis.setState({\n\t\t\ttodos: [...this.state.todos, item]\n\t\t})\n\t}\n\n\trenderDialogAdd = () => {\n\t\tif (this.state.isAddTodo === true) {\n\t\t\treturn <AddTodo btnAddTodoClick={(item) => this.btnAddTodoClick(item)} toggleAddDialog={() => this.toggleAddDialog()} />;\n\t\t}\n\t}\n\n\t//  =========================== EDIT TODO ============================\n\trenderDialogEdit = () => {\n\t\tlet item;\n\n\t\tthis.state.todos.map((value, index) => {\n\t\t\tif (value.id === this.state.editItemId) {\n\t\t\t\titem = value;\n\t\t\t}\n\t\t})\n\n\t\tif (this.state.isEditTodo === true) {\n\t\t\treturn <EditTodo data={item} toggleEditDialog={() => this.toggleEditDialog()} btnEditClick={(item) => this.getEditData(item)} />;\n\t\t}\n\t}\n\n\ttoggleEditDialog = () => {\n\t\tthis.setState({\n\t\t\tisEditTodo: !this.state.isEditTodo\n\t\t})\n\t}\n\n\tbtnEditClick = (id) => {\n\t\tthis.setState({\n\t\t\teditItemId: id\n\t\t});\n\n\t\tthis.toggleEditDialog();\n\n\t}\n\n\tgetEditData = (item) => {\n\t\t// gui du lieu ve server\n\t\tlet db = database.ref('Notes/' );\n\n\t\tlet child = db.child(item.id);\n\n\t\tchild.update({\n\t\t\tjob : item.job,\n\t\t\tnote : item.note,\n\t\t\tpriority : item.priority,\n\t\t\tcompleted : item.completed\n\t\t});\n\n\t\t// cap nhat state\n\t\tlet arrayData = [...this.state.todos];\n\n\t\tarrayData.map((value, key) => {\n\t\t\tif (value.id === item.id)\n\t\t\t{\n\t\t\t\tvalue.job = item.job;\n\t\t\t\tvalue.note = item.note;\n\t\t\t\tvalue.priority = item.priority;\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n\t\t\ttodos : arrayData\n\t\t})\n\t}\n\n\t// ========================== REMOVE TODO =============================\n\n\tbtnRemoveClick = (id) => {\n\t\t// gui du lieu ve server\n\t\tconsole.log(id);\n\t\tlet db = database.ref('Notes/');\n\n\t\tdb.child(id).remove();\n\t\t// cap nhat state\n\t\tthis.setState({\n\t\t\ttodos: this.state.todos.filter((value) => value.id !== id)\n\t\t})\n\t}\n\n\t// ======================= COMPLETED TODO ===========================\n\ttodoClick = (item) => {\n\n\t\t// gui du lieu\n\t\tlet child = database.ref('Notes/' + item.id);\n\n\t\tchild.update({\n\t\t\tcompleted : item.completed\n\t\t})\n\n\t\t// cap nhat state\n\t\tlet arrayData = [...this.state.todos];\n\n\t\tarrayData.map((value, key) => {\n\t\t\tif (value.id === item.id)\n\t\t\t{\n\t\t\t\tvalue.completed = !value.completed;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\ttodos : arrayData\n\t\t})\n\t}\n\n\t// =============================== RENDER ===========================\n\t\n\tcomponentWillMount() {\n\t\tthis.reUpdateDatabase();\n\t}\n\t\n\trender() {\n\t\t// this.reUpdateDatabase();\n\t\treturn (\n\t\t\t<div className=\"App\">\n\n\t\t\t\t<div id={\"dim-screen\" + this.dim_screen()}></div>\n\n\n\t\t\t\t{/* comp header */}\n\t\t\t\t<Header />\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{/* comp search  and sort */}\n\t\t\t\t\t<Search btnAddClick={() => this.toggleAddDialog()} />\n\n\t\t\t\t\t{/* comp todos list */}\n\t\t\t\t\t<TodoList data={this.state.todos} btnEditClick={(id) => this.btnEditClick(id)}\n\t\t\t\t\t\tbtnRemoveClick={(id) => this.btnRemoveClick(id)} todoClick={(item) => this.todoClick(item)}/>\n\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.renderDialogAdd()\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.renderDialogEdit()\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}