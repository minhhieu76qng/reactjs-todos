{"version":3,"sources":["components/Header.js","components/Search.js","components/Todo.js","components/TodoList.js","components/Firebase.js","components/AddTodo.js","components/EditTodo.js","components/Notifier.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","className","Component","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isChanged","event","value","target","btnSearchClick","setState","searchValue","state","preventDefault","btnAddClick","_this2","onClick","title","onChange","type","placeholder","Todo","btnEditClick","stopPropagation","data","btnRemoveClick","todoClick","item","job","note","priority","completed","console","log","priorityText","parseInt","index","toUpperCase","substring","lenght","aria-hidden","TodoList","toggleSort","sort","width","status","map","key","components_Todo","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","AddTodo","name","defineProperty","length","btnAddTodoClick","toggleAddDialog","alert","headline","message","btnCancelClick","htmlFor","aria-describedby","EditTodo","toggleEditDialog","Notifier","dismissAlert","getAlert","_this$props$alert","es","onDismiss","timeout","App","reUpdateDatabase","ref","on","notes","arrayData","forEach","element","val","objectSpread","push","todos","dim_screen","isAddTodo","isEditTodo","concat","toConsumableArray","renderDialogAdd","components_AddTodo","renderDialogEdit","editItemId","components_EditTodo","getEditData","child","update","remove","filter","renderAlert","components_Notifier","search","temp","sortByPriority","toLowerCase","indexOf","b","components_Header","Search_Search","components_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iMAgBeA,0LAZP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SAASC,UAAU,yCACvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,aACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAb,6BACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBAPbC,cCAAC,cAEjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,UAAY,SAACC,GAET,IAAMC,EAAQD,EAAME,OAAOD,MAE3BT,EAAKD,MAAMY,eAAeF,GAE1BT,EAAKY,SAAS,CACVC,YAAcJ,KAfHT,EAmBnBW,eAAiB,SAACH,GACdR,EAAKD,MAAMY,eAAeX,EAAKc,MAAMD,aACrCL,EAAMO,kBArBSf,EAwBnBgB,YAAc,WACVhB,EAAKD,MAAMiB,eAtBXhB,EAAKc,MAAQ,CACTD,YAAc,IAJHb,wEA2BV,IAAAiB,EAAAd,KACL,OACIX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBsB,QAAS,kBAAMD,EAAKD,eAAeG,MAAM,gBAA7E,aAGJ3B,EAAAC,EAAAC,cAAA,QAAME,UAAU,eACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,SAAOe,MAAON,KAAKU,YAAaO,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQa,KAAK,SAASC,YAAY,yBAvC9FzB,aC0DrB0B,6MAxDXC,aAAe,SAAChB,GACZA,EAAMiB,kBACN,IAAI9B,EAAKK,EAAKD,MAAM2B,KAAK/B,GACzBK,EAAKD,MAAMyB,aAAa7B,MAG5BgC,eAAiB,SAACnB,GACdA,EAAMiB,kBACN,IAAI9B,EAAKK,EAAKD,MAAM2B,KAAK/B,GACzBK,EAAKD,MAAM4B,eAAehC,MAG9BiC,UAAY,WACR,IAAIC,EAAO,CACPlC,GAAKK,EAAKD,MAAM2B,KAAK/B,GACrBmC,IAAM9B,EAAKD,MAAM2B,KAAKI,IACtBC,KAAO/B,EAAKD,MAAM2B,KAAKK,KACvBC,SAAWhC,EAAKD,MAAM2B,KAAKM,SAC3BC,WAAajC,EAAKD,MAAM2B,KAAKO,WAEjCjC,EAAKD,MAAM6B,UAAUC,4EAGhB,IAAAZ,EAAAd,KACL+B,QAAQC,IAAI,SACZ,IAEIC,EAFgB,CAAC,MAAO,SAAU,SAELC,SAASlC,KAAKJ,MAAM2B,KAAKM,UAAY,GAEtE,OACIxC,EAAAC,EAAAC,cAAA,MAAIwB,QAAS,kBAAMD,EAAKW,aAAahC,WAAyC,IAA9BO,KAAKJ,MAAM2B,KAAKO,UAAqB,YAAc,IAC/FzC,EAAAC,EAAAC,cAAA,UAAKS,KAAKJ,MAAMuC,MAAQ,GACxB9C,EAAAC,EAAAC,cAAA,UAAKS,KAAKJ,MAAM2B,KAAKI,KACrBtC,EAAAC,EAAAC,cAAA,UAAKS,KAAKJ,MAAM2B,KAAKK,MACrBvC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAW,YAAcwC,GAAeA,EAAa,GAAGG,cAAgBH,EAAaI,UAAU,EAAGJ,EAAaK,UAGxHjD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAEuB,IAA9BO,KAAKJ,MAAM2B,KAAKO,UAAuBzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBuB,MAAM,iBAAiBD,QAAS,SAACV,GAAD,OAAWS,EAAKO,aAAahB,KAC7IhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,sBAAsB8C,cAAY,UACtC,KAGblD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBuB,MAAM,mBAAmBD,QAAS,SAACV,GAAD,OAAWS,EAAKU,eAAenB,KAChGhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAc8C,cAAY,oBAjDhD7C,aC4DJ8C,6MA1DXnB,aAAe,SAAC7B,GACZK,EAAKD,MAAMyB,aAAa7B,MAG5BgC,eAAiB,SAAChC,GACdK,EAAKD,MAAM4B,eAAehC,MAG9BiC,UAAY,SAACC,GACf7B,EAAKD,MAAM6B,UAAUC,MAGnBe,WAAa,WACR5C,EAAKD,MAAM6C,sFAGP,IAAA3B,EAAAd,KACA0C,EAAQ1C,KAAKJ,MAAb8C,KACL,OACIrD,EAAAC,EAAAC,cAAA,SAAOE,UAAU,yEACbJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,OACXtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,QACXtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,QACXtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,QACXtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,SAEftD,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKwB,QAAS,kBAAMD,EAAK2B,cAAchD,UAAW,UAA2B,IAAhBiD,EAAKE,OAAmB,GAAK,WAA1F,WACYvD,EAAAC,EAAAC,cAAA,OAAKE,UAAW,cAA6B,IAAdiD,EAAKxB,KAAgB,KAAO,YAG3E7B,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aAEQS,KAAKJ,MAAM2B,KAAKsB,IAAI,SAACvC,EAAOwC,GAAR,OAChBzD,EAAAC,EAAAC,cAACwD,EAAD,CACIZ,MAAOW,EACPA,IAAKA,EACLvB,KAAMjB,EACNe,aAAc,SAAC7B,GAAD,OAAQsB,EAAKO,aAAa7B,IACxCgC,eAAgB,SAAChC,GAAD,OAAQsB,EAAKU,eAAehC,IAC5CiC,UAAW,SAACC,GAAD,OAAUZ,EAAKW,UAAUC,iBAnD7ChC,qBCHnBsD,EAAWC,EAAQ,IAYrBD,EAASE,cATE,CACTC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBAKd,IAAMC,EAAWT,EAASS,WCiFpBC,cA1FX,SAAAA,EAAY9D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,IACf7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,KAAMJ,KAWVQ,UAAY,SAACC,GACT,IAAMsD,EAAOtD,EAAME,OAAOoD,KACpBrD,EAAQD,EAAME,OAAOD,MAC3BT,EAAKY,SAALX,OAAA8D,EAAA,EAAA9D,CAAA,GACK6D,EAAQrD,KAhBET,EAoBnBgB,YAAc,WACV,IAAIa,EAAO,CACPC,IAAM9B,EAAKc,MAAMgB,IACjBC,KAAO/B,EAAKc,MAAMiB,KAClBC,SAAWhC,EAAKc,MAAMkB,SACtBC,WAAY,GAIQ,IAApBJ,EAAKC,IAAIkC,QAAqC,IAArBnC,EAAKE,KAAKiC,QAkBvChE,EAAKD,MAAMkE,gBAAgBpC,GAE3B7B,EAAKD,MAAMmE,mBAbPlE,EAAKD,MAAMoE,MAAM,CACb9C,KAAO,SACP+C,SAAW,QACXC,QAAU,+BAvCHrE,EAoDnBsE,eAAiB,WACbtE,EAAKD,MAAMmE,mBAlDXlE,EAAKc,MAAQ,CACTnB,GAAK,GACLmC,IAAM,GACNC,KAAO,GACPC,SAAW,IACXC,WAAY,GARDjC,wEAwDV,IAAAiB,EAAAd,KACL,OACIX,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACJH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,gBAEAJ,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,OAAf,cACA/E,EAAAC,EAAAC,cAAA,SAAOe,MAAON,KAAKW,MAAMgB,IAAKV,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQsD,KAAK,MAAMzC,KAAK,OAAOzB,UAAU,eAAe4E,mBAAiB,SAASlD,YAAY,QAChK9B,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASC,UAAU,0BAEjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,QAAf,SACA/E,EAAAC,EAAAC,cAAA,YAAUe,MAAON,KAAKW,MAAMiB,KAAMX,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQsD,KAAK,OAAOzC,KAAK,OAAOzB,UAAU,eAAe4E,mBAAiB,SAASlD,YAAY,SACrK9B,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASC,UAAU,0BAEjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,YAAf,aACA/E,EAAAC,EAAAC,cAAA,UAAQe,MAAON,KAAKW,MAAMkB,SAAUZ,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQZ,UAAU,eAAekE,KAAK,YAC1GtE,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,OACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,UACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,WAGRjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACXJ,EAAAC,EAAAC,cAAA,UAAQ2B,KAAK,QAAQzB,UAAU,uBAAuBsB,QAAS,kBAAMD,EAAKD,gBAA1E,OACAxB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oBAAoBsB,QAAS,kBAAMD,EAAKqD,mBAA1D,oBAnFEzE,aC4DP4E,cA7DX,SAAAA,EAAY1E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACfzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,KAWVuE,eAAiB,WACbtE,EAAKD,MAAM2E,oBAbI1E,EAgBnBwB,aAAe,WACX,IAAIK,EAAO7B,EAAKc,MAChBd,EAAKD,MAAMyB,aAAaK,GACxB7B,EAAKD,MAAM2E,oBAnBI1E,EAsBnBO,UAAY,SAACC,GACT,IAAMsD,EAAOtD,EAAME,OAAOoD,KACpBrD,EAAQD,EAAME,OAAOD,MAC3BT,EAAKY,SAALX,OAAA8D,EAAA,EAAA9D,CAAA,GACK6D,EAAQrD,KAvBbT,EAAKc,MAAQ,CACTnB,GAAKK,EAAKD,MAAM2B,KAAK/B,GACrBmC,IAAM9B,EAAKD,MAAM2B,KAAKI,IACtBC,KAAO/B,EAAKD,MAAM2B,KAAKK,KACvBC,SAAWhC,EAAKD,MAAM2B,KAAKM,SAC3BC,UAAYjC,EAAKD,MAAM2B,KAAKO,WARjBjC,wEA8BV,IAAAiB,EAAAd,KACL,OACIX,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACJH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,OAAf,cACA/E,EAAAC,EAAAC,cAAA,SAAOe,MAAON,KAAKW,MAAMgB,IAAKV,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQsD,KAAK,MAAMzC,KAAK,OAAOzB,UAAU,eAAe4E,mBAAiB,SAASlD,YAAY,QAChK9B,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASC,UAAU,0BAEjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,QAAf,SACA/E,EAAAC,EAAAC,cAAA,YAAUe,MAAON,KAAKW,MAAMiB,KAAMX,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQsD,KAAK,OAAOzC,KAAK,OAAOzB,UAAU,eAAe4E,mBAAiB,SAASlD,YAAY,SACrK9B,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASC,UAAU,0BAEjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,YAAf,aACA/E,EAAAC,EAAAC,cAAA,UAAQe,MAAON,KAAKW,MAAMkB,SAAUZ,SAAU,SAACZ,GAAD,OAAWS,EAAKV,UAAUC,IAAQZ,UAAU,eAAekE,KAAK,YAC1GtE,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,OACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,UACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,WAGRjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBsB,QAAS,kBAAMD,EAAKO,iBAA7D,QACAhC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oBAAoBsB,QAAS,kBAAMD,EAAKqD,mBAA1D,mBAvDGzE,qBCeR8E,6MAbXC,aAAe,WACX5E,EAAKD,MAAM8E,SAAS,+EAEf,IAAA5D,EAAAd,KAAA2E,EAC6B3E,KAAKJ,MAAMoE,MAAvC9C,EADDyD,EACCzD,KAAM+C,EADPU,EACOV,SAAUC,EADjBS,EACiBT,QACtB,OACI7E,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAO1D,KAAMA,EAAM+C,SAAUA,EAAUY,UAAW,kBAAM/D,EAAK2D,gBAAgBK,QAAS,KACjFZ,UARMxE,aCmURqF,cAzTd,SAAAA,EAAYnF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IAClBlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMJ,KAoBPoF,iBAAmB,WACTvB,EAASwB,IAAI,UACnBC,GAAG,QAAS,SAAAC,GACd,IAAIC,EAAY,GAChBD,EAAME,QAAQ,SAAAC,GACb,IAAMxC,EAAMwC,EAAQxC,IACdyC,EAAMD,EAAQC,MAEhB7D,EAAI5B,OAAA0F,EAAA,EAAA1F,CAAA,GAAOyF,EAAP,CAAY/F,GAAKsD,IAEzBsC,EAAUK,KAAK/D,KAGhB7B,EAAKY,SAAS,CACbiF,MAAQN,OAnCQvF,EAwCnB8F,WAAa,WACZ,OAAgC,IAAzB9F,EAAKc,MAAMiF,YAAgD,IAA1B/F,EAAKc,MAAMkF,WAAsB,GAAK,WAzC5DhG,EA8CnBkE,gBAAkB,WACjBlE,EAAKY,SAAS,CACbmF,WAAY/F,EAAKc,MAAMiF,aAhDN/F,EAoDnBiE,gBAAkB,SAAApC,GACjB7B,EAAKY,SAAS,CACbiF,MAAK,GAAAI,OAAAhG,OAAAiG,EAAA,EAAAjG,CAAMD,EAAKc,MAAM+E,OAAjB,CAAwBhE,MAIf+B,EAASwB,IAAI,UACnBQ,KAAK/D,GAGR7B,EAAK6E,SAAS,CACVxD,KAAO,UACP+C,SAAW,UACXC,QAAU,kBAjEFrE,EAsEnBmG,gBAAkB,WACjB,IAA6B,IAAzBnG,EAAKc,MAAMiF,UACd,OAAOvG,EAAAC,EAAAC,cAAC0G,EAAD,CAASjC,MAAO,SAACA,GAAD,OAAWnE,EAAK6E,SAASV,IAAQF,gBAAiB,SAACpC,GAAD,OAAU7B,EAAKiE,gBAAgBpC,IAAOqC,gBAAiB,kBAAMlE,EAAKkE,sBAxE1HlE,EA6EnBqG,iBAAmB,WAClB,IAAIxE,EAQJ,GANA7B,EAAKc,MAAM+E,MAAM7C,IAAI,SAACvC,EAAO6B,GACxB7B,EAAMd,KAAOK,EAAKc,MAAMwF,aAC3BzE,EAAOpB,MAIqB,IAA1BT,EAAKc,MAAMkF,WACd,OAAOxG,EAAAC,EAAAC,cAAC6G,EAAD,CAAU7E,KAAMG,EAAM6C,iBAAkB,kBAAM1E,EAAK0E,oBAAoBlD,aAAc,SAACK,GAAD,OAAU7B,EAAKwG,YAAY3E,OAvFtG7B,EA2FnB0E,iBAAmB,WAClB1E,EAAKY,SAAS,CACboF,YAAahG,EAAKc,MAAMkF,cA7FPhG,EAiGnBwB,aAAe,SAAC7B,GACfK,EAAKY,SAAS,CACb0F,WAAY3G,IAGbK,EAAK0E,oBAtGa1E,EAyGnBwG,YAAc,SAAC3E,GAEL+B,EAASwB,IAAI,UAEPqB,MAAM5E,EAAKlC,IAEpB+G,OAAO,CACZ5E,IAAMD,EAAKC,IACXC,KAAOF,EAAKE,KACZC,SAAWH,EAAKG,SAChBC,UAAYJ,EAAKI,YAIlB,IAAIsD,EAAStF,OAAAiG,EAAA,EAAAjG,CAAOD,EAAKc,MAAM+E,OAE/BN,EAAUvC,IAAI,SAACvC,EAAOwC,GACjBxC,EAAMd,KAAOkC,EAAKlC,KAErBc,EAAMqB,IAAMD,EAAKC,IACjBrB,EAAMsB,KAAOF,EAAKE,KAClBtB,EAAMuB,SAAWH,EAAKG,YAIxBhC,EAAKY,SAAS,CACbiF,MAAQN,IAIHvF,EAAK6E,SAAS,CACVxD,KAAO,UACP+C,SAAW,UACXC,QAAU,mBA1IFrE,EAgJnB2B,eAAiB,SAAChC,GAGRiE,EAASwB,IAAI,UAEnBqB,MAAM9G,GAAIgH,SAEb3G,EAAKY,SAAS,CACbiF,MAAO7F,EAAKc,MAAM+E,MAAMe,OAAO,SAACnG,GAAD,OAAWA,EAAMd,KAAOA,MAIlDK,EAAK6E,SAAS,CACVxD,KAAO,UACP+C,SAAW,UACXC,QAAU,qBA/JFrE,EAoKnB4B,UAAY,SAACC,GAGA+B,EAASwB,IAAI,SAAWvD,EAAKlC,IAEnC+G,OAAO,CACZzE,UAAYJ,EAAKI,YAIlB,IAAIsD,EAAStF,OAAAiG,EAAA,EAAAjG,CAAOD,EAAKc,MAAM+E,OAE/BN,EAAUvC,IAAI,SAACvC,EAAOwC,GACjBxC,EAAMd,KAAOkC,EAAKlC,KAErBc,EAAMwB,WAAaxB,EAAMwB,aAI3BjC,EAAKY,SAAS,CACbiF,MAAQN,IAIHvF,EAAK6E,SAAS,CACVxD,KAAO,UACP+C,SAAW,UACXC,QAAU,mBA/LFrE,EAqMnB6E,SAAW,SAACV,GACXnE,EAAKY,SAAS,CACbuD,MAAQA,KAvMSnE,EA2MnB6G,YAAc,WAEb,GAAyB,OAArB7G,EAAKc,MAAMqD,MAKd,OAAO3E,EAAAC,EAAAC,cAACoH,EAAD,CAAUjC,SAAU,SAACV,GAAD,OAAWnE,EAAK6E,SAASV,IAAQA,MAAOnE,EAAKc,MAAMqD,SAlN7DnE,EAuNnBW,eAAiB,SAACF,GACjBT,EAAKY,SAAS,CACbmG,OAAStG,KAzNQT,EA+NnB4C,WAAa,WAEZ,IAAIoE,EAAOhH,EAAKc,MAAMmG,eAEtBD,EAAKjE,QAAUiE,EAAKjE,QAEA,IAAhBiE,EAAKjE,SAERiE,EAAK3F,MAAQ2F,EAAK3F,MAEnBrB,EAAKY,SAAS,CACbqG,eAAiBD,KAvOlBhH,EAAKc,MAAQ,CACZ+E,MAAO,GAEPE,WAAW,EAEXC,YAAY,EAEZ7B,MAAQ,KAER4C,OAAS,GAETE,eAAiB,CAChBlE,QAAS,EACT1B,MAAO,IAhBSrB,oFAiPlBG,KAAKgF,oDAGG,IAAAlE,EAAAd,KACJoF,EAAY,GA0BhB,OAtBCA,EAFyB,KAAtBpF,KAAKW,MAAMiG,OAEF5G,KAAKW,MAAM+E,MAAMe,OAAO,SAACnG,GAAD,OAAiF,IAAtEA,EAAMqB,IAAIoF,cAAcC,QAAQlG,EAAKH,MAAMiG,OAAOG,iBAIxFjH,OAAAiG,EAAA,EAAAjG,CAAOE,KAAKW,MAAM+E,OAE5B3D,QAAQC,IAAIhC,KAAKW,MAAM+E,QAGkB,IAArC1F,KAAKW,MAAMmG,eAAelE,QAE7BwC,EAAU1C,KAAK,SAACpD,EAAG2H,GAClB,OAAuC,IAAnCnG,EAAKH,MAAMmG,eAAe5F,KACtBgB,SAAS5C,EAAEuC,UAAYK,SAAS+E,EAAEpF,YAEhCK,SAAS5C,EAAEuC,UAAYK,SAAS+E,EAAEpF,aAI9CE,QAAQC,IAAI,WAIX3C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAEdJ,EAAAC,EAAAC,cAAA,OAAKC,GAAI,aAAeQ,KAAK2F,eAG7BtG,EAAAC,EAAAC,cAAC2H,EAAD,MAEA7H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEdJ,EAAAC,EAAAC,cAAC4H,EAAD,CAAQtG,YAAa,kBAAMC,EAAKiD,mBAAmBvD,eAAgB,SAACE,GAAD,OAAiBI,EAAKN,eAAeE,MAGxGrB,EAAAC,EAAAC,cAAC6H,EAAD,CACC7F,KAAM6D,EACN/D,aAAc,SAAC7B,GAAD,OAAQsB,EAAKO,aAAa7B,IACxCgC,eAAgB,SAAChC,GAAD,OAAQsB,EAAKU,eAAehC,IAC5CiC,UAAW,SAACC,GAAD,OAAUZ,EAAKW,UAAUC,IACpCgB,KAAM1C,KAAKW,MAAMmG,eACjBrE,WAAY,kBAAM3B,EAAK2B,gBAGvBzC,KAAKgG,kBAILhG,KAAKkG,oBAKP7G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAEdO,KAAK0G,uBAjTQhH,aCAE2H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtI,EAAAC,EAAAC,cAACqI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.378b47f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"header\" className=\"jumbotron jumbotron-fluid text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-3\">Todo List</h1>\r\n                    <p className=\"lead\">A todo list using ReactJS</p>\r\n                    <hr className=\"my-2\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nexport default class Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            searchValue : ''\r\n        }\r\n    }\r\n    \r\n    isChanged = (event) => {\r\n\r\n        const value = event.target.value;\r\n\r\n        this.props.btnSearchClick(value);\r\n\r\n        this.setState({\r\n            searchValue : value\r\n        })\r\n    }\r\n\r\n    btnSearchClick = (event) => {\r\n        this.props.btnSearchClick(this.state.searchValue);\r\n        event.preventDefault();\r\n    }\r\n\r\n    btnAddClick = () => {\r\n        this.props.btnAddClick();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"comp-utility-search back-dark mb-3\">\r\n                <div className=\"utility\">\r\n                    <button className=\"btn btn-primary\" onClick={() => this.btnAddClick()} title=\"Add new todo\">Add todo</button>\r\n                </div>\r\n\r\n                <form className=\"form-search\">\r\n                    <div className=\"search-box\">\r\n                        <div className=\"wrapper\">\r\n                            <input value={this.searchValue} onChange={(event) => this.isChanged(event)} type=\"search\" placeholder=\"Search...\"/>\r\n                        </div>\r\n                        {/* <button onClick={(event) => this.btnSearchClick(event)} className=\"btn btn-outline-success ml-2\">Search</button> */}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n\r\n    btnEditClick = (event) => {\r\n        event.stopPropagation();\r\n        let id = this.props.data.id;\r\n        this.props.btnEditClick(id);\r\n    }\r\n\r\n    btnRemoveClick = (event) => {\r\n        event.stopPropagation();\r\n        let id = this.props.data.id;\r\n        this.props.btnRemoveClick(id);\r\n    }\r\n\r\n    todoClick = () => {\r\n        let item = {\r\n            id : this.props.data.id,\r\n            job : this.props.data.job,\r\n            note : this.props.data.note,\r\n            priority : this.props.data.priority,\r\n            completed : !this.props.data.completed,\r\n        }\r\n        this.props.todoClick(item);\r\n    }\r\n    \r\n    render() {\r\n        console.log('mount');\r\n        let priorityArray = ['low', 'medium', 'hight'];\r\n        \r\n        let priorityText = priorityArray[parseInt(this.props.data.priority) - 1];\r\n\r\n        return (\r\n            <tr onClick={() => this.todoClick()} className={this.props.data.completed === true ? \"completed\" : \"\"}>\r\n                <td>{this.props.index + 1}</td>\r\n                <td>{this.props.data.job}</td>\r\n                <td>{this.props.data.note}</td>\r\n                <td>\r\n                    <div className={\"priority \" + priorityText}>{priorityText[0].toUpperCase() + priorityText.substring(1, priorityText.lenght)}</div>\r\n                    {/* <div>{this.props.data.priority}</div> */}\r\n                </td>\r\n                <td>\r\n                    <div className=\"form-group mb-0\">\r\n                        {\r\n                            this.props.data.completed === false ? (<button className=\"btn btn-warning mr-2\" title=\"Edit this todo\" onClick={(event) => this.btnEditClick(event)}>\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\"></i>\r\n                        </button>) : null\r\n                        }\r\n\r\n                        <button className=\"btn btn-danger\" title=\"Remove this todo\" onClick={(event) => this.btnRemoveClick(event)}>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass TodoList extends Component {\r\n    btnEditClick = (id) => {\r\n        this.props.btnEditClick(id);\r\n    }\r\n\r\n    btnRemoveClick = (id) => {\r\n        this.props.btnRemoveClick(id);\r\n    }\r\n\r\n    todoClick = (item) => {\r\n\t\tthis.props.todoClick(item);\r\n    }\r\n    \r\n    toggleSort = () => {\r\n         this.props.toggleSort();\r\n    }\r\n\r\n    render() {\r\n        let {sort} = this.props;\r\n        return (\r\n            <table className=\"todos-list text-center table table-bordered table-inverse table-hover\">\r\n                <caption>Table todo list</caption>\r\n                <colgroup>\r\n                    <col width=\"5%\" />\r\n                    <col width=\"35%\" />\r\n                    <col width=\"30%\" />\r\n                    <col width=\"15%\" />\r\n                    <col width=\"15%\" />\r\n                </colgroup>\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Job</th>\r\n                        <th>Note</th>\r\n                        <th>\r\n                            <div onClick={() => this.toggleSort()} className={\"sort \" + (sort.status === false ? \"\" : \"active\")}>\r\n                                Priority<div className={\"triangle \" + (sort.type === true ? 'up' : 'down')}></div>\r\n                            </div>\r\n                        </th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.data.map((value, key) => \r\n                            <Todo \r\n                                index={key} \r\n                                key={key} \r\n                                data={value}\r\n                                btnEditClick={(id) => this.btnEditClick(id)}\r\n                                btnRemoveClick={(id) => this.btnRemoveClick(id)}\r\n                                todoClick={(item) => this.todoClick(item)}/>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","var firebase = require('firebase');\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyDzdsOZSXW3Gn7KbJ6_UZ1UlV56pUcWLGg\",\r\n    authDomain: \"note-react-1998.firebaseapp.com\",\r\n    databaseURL: \"https://note-react-1998.firebaseio.com\",\r\n    projectId: \"note-react-1998\",\r\n    storageBucket: \"note-react-1998.appspot.com\",\r\n    messagingSenderId: \"974356818032\"\r\n  };\r\n  \r\n  firebase.initializeApp(config);\r\n\r\n  export const database = firebase.database();","import React, { Component } from 'react';\r\nimport {database} from './Firebase';\r\n\r\n\r\nclass AddTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id : '',\r\n            job : '',\r\n            note : '',\r\n            priority : '1',\r\n            completed : false\r\n        }\r\n    }\r\n\r\n    isChanged = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    btnAddClick = () => {\r\n        let item = {\r\n            job : this.state.job,\r\n            note : this.state.note,\r\n            priority : this.state.priority,\r\n            completed : false\r\n        }\r\n\r\n        // kiem tra tinh hop le cua du lieu\r\n        if (item.job.length === 0 || item.note.length === 0)\r\n        {\r\n            // gui message loi ve app.\r\n            // type : danger\r\n            // headline : error\r\n            // message : You must fill all fields\r\n\r\n            this.props.alert({\r\n                type : 'danger',\r\n                headline : 'Error',\r\n                message : 'You must fill all fields!'\r\n            })\r\n\r\n            // return;\r\n            return;\r\n        }\r\n\r\n        // gui du lieu lai len app\r\n        this.props.btnAddTodoClick(item);\r\n\r\n        this.props.toggleAddDialog();\r\n    }\r\n    \r\n    btnCancelClick = () => {\r\n        this.props.toggleAddDialog();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editTodo\">\r\n                <h3 className=\"text-center\">Add new todo</h3>\r\n                \r\n                <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"job\" >Todo name:</label>\r\n                    <input value={this.state.job} onChange={(event) => this.isChanged(event)} name=\"job\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Job\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"note\" >Note:</label>\r\n                    <textarea value={this.state.note} onChange={(event) => this.isChanged(event)} name=\"note\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Note\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"priority\" >Priority:</label>\r\n                    <select value={this.state.priority} onChange={(event) => this.isChanged(event)} className=\"form-control\" name=\"priority\">\r\n                        <option value=\"1\">Low</option>\r\n                        <option value=\"2\">Medium</option>\r\n                        <option value=\"3\">Hight</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group text-center mb-0\">\r\n                    <button type=\"reset\" className=\"btn btn-primary mr-2\" onClick={() => this.btnAddClick()}>Add</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => this.btnCancelClick()}>Cancel</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React, { Component } from 'react';\r\n\r\nclass EditTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            id : this.props.data.id,\r\n            job : this.props.data.job,\r\n            note : this.props.data.note,\r\n            priority : this.props.data.priority,\r\n            completed : this.props.data.completed\r\n        }\r\n    }\r\n    \r\n    btnCancelClick = () => {\r\n        this.props.toggleEditDialog();\r\n    }\r\n\r\n    btnEditClick = () => {\r\n        let item = this.state;\r\n        this.props.btnEditClick(item);\r\n        this.props.toggleEditDialog();\r\n    }\r\n\r\n    isChanged = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editTodo\">\r\n                <h3 className=\"text-center\">Edit todo</h3>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"job\" >Todo name:</label>\r\n                    <input value={this.state.job} onChange={(event) => this.isChanged(event)} name=\"job\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Job\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"note\" >Note:</label>\r\n                    <textarea value={this.state.note} onChange={(event) => this.isChanged(event)} name=\"note\" type=\"text\" className=\"form-control\" aria-describedby=\"helpId\" placeholder=\"Note\" />\r\n                    <small id=\"helpId\" className=\"form-text text-muted\"></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"priority\" >Priority:</label>\r\n                    <select value={this.state.priority} onChange={(event) => this.isChanged(event)} className=\"form-control\" name=\"priority\">\r\n                        <option value=\"1\">Low</option>\r\n                        <option value=\"2\">Medium</option>\r\n                        <option value=\"3\">Hight</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group text-center mb-0\">\r\n                    <button className=\"btn btn-primary mr-2\" onClick={() => this.btnEditClick()}>Edit</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => this.btnCancelClick()}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditTodo;","import React, { Component } from 'react';\r\nimport { Alert } from 'react-bs-notifier';\r\n\r\nclass Notifier extends Component {\r\n    dismissAlert = () => {\r\n        this.props.getAlert(null);\r\n    }\r\n    render() {\r\n        let { type, headline, message } = this.props.alert;\r\n        return (\r\n            <Alert type={type} headline={headline} onDismiss={() => this.dismissAlert()} timeout={2000}>\r\n                {message}\r\n            </Alert>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notifier;","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport Header from './Header';\nimport Search from './Search';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport EditTodo from './EditTodo';\n\nimport {database} from './Firebase';\nimport Notifier from './Notifier';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttodos: [],\n\n\t\t\tisAddTodo: false,\n\n\t\t\tisEditTodo: false,\n\n\t\t\talert : null,\n\n\t\t\tsearch : '',\n\n\t\t\tsortByPriority : {\n\t\t\t\tstatus : false,\n\t\t\t\ttype : true\t\t// toggle true -> search theo thứ tự từ low -> high. và ngược lại\n\t\t\t}\n\t\t}\n\t}\n\n\treUpdateDatabase = () => {\n\t\tlet db = database.ref('Notes/');\n\t\tdb.on('value', notes => {\n\t\t\tlet arrayData = [];\n\t\t\tnotes.forEach(element => {\n\t\t\t\tconst key = element.key;\n\t\t\t\tconst val = element.val();\n\t\t\t\t\n\t\t\t\tlet item = {...val, id : key};\n\n\t\t\t\tarrayData.push(item);\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\ttodos : arrayData\n\t\t\t})\n\t\t})\n\t}\n\n\tdim_screen = () => {\n\t\treturn this.state.isAddTodo === true || this.state.isEditTodo === true ? \"\" : \" hidden\";\n\t}\n\n\t// =========================== ADD TODO ===============================\n\n\ttoggleAddDialog = () => {\n\t\tthis.setState({\n\t\t\tisAddTodo: !this.state.isAddTodo\n\t\t})\n\t}\n\n\tbtnAddTodoClick = item => {\n\t\tthis.setState({\n\t\t\ttodos: [...this.state.todos, item]\n\t\t})\n\n\t\t// gui du lieu len firebase\n        let db = database.ref('Notes/');\n        db.push(item);\n\n        // thong bao thanh cong\n        this.getAlert({\n            type : 'success',\n            headline : 'Success',\n            message : 'Add success!'\n\t\t})\n\t\t\n\t}\n\n\trenderDialogAdd = () => {\n\t\tif (this.state.isAddTodo === true) {\n\t\t\treturn <AddTodo alert={(alert) => this.getAlert(alert)} btnAddTodoClick={(item) => this.btnAddTodoClick(item)} toggleAddDialog={() => this.toggleAddDialog()} />;\n\t\t}\n\t}\n\n\t//  =========================== EDIT TODO ============================\n\trenderDialogEdit = () => {\n\t\tlet item;\n\n\t\tthis.state.todos.map((value, index) => {\n\t\t\tif (value.id === this.state.editItemId) {\n\t\t\t\titem = value;\n\t\t\t}\n\t\t})\n\n\t\tif (this.state.isEditTodo === true) {\n\t\t\treturn <EditTodo data={item} toggleEditDialog={() => this.toggleEditDialog()} btnEditClick={(item) => this.getEditData(item)} />;\n\t\t}\n\t}\n\n\ttoggleEditDialog = () => {\n\t\tthis.setState({\n\t\t\tisEditTodo: !this.state.isEditTodo\n\t\t})\n\t}\n\n\tbtnEditClick = (id) => {\n\t\tthis.setState({\n\t\t\teditItemId: id\n\t\t});\n\n\t\tthis.toggleEditDialog();\n\t}\n\n\tgetEditData = (item) => {\n\t\t// gui du lieu ve server\n\t\tlet db = database.ref('Notes/' );\n\n\t\tlet child = db.child(item.id);\n\n\t\tchild.update({\n\t\t\tjob : item.job,\n\t\t\tnote : item.note,\n\t\t\tpriority : item.priority,\n\t\t\tcompleted : item.completed\n\t\t});\n\n\t\t// cap nhat state\n\t\tlet arrayData = [...this.state.todos];\n\n\t\tarrayData.map((value, key) => {\n\t\t\tif (value.id === item.id)\n\t\t\t{\n\t\t\t\tvalue.job = item.job;\n\t\t\t\tvalue.note = item.note;\n\t\t\t\tvalue.priority = item.priority;\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n\t\t\ttodos : arrayData\n\t\t})\n\n\t\t// thong bao thanh cong\n        this.getAlert({\n            type : 'success',\n            headline : 'Success',\n            message : 'Edit success!'\n\t\t})\n\t}\n\n\t// ========================== REMOVE TODO =============================\n\n\tbtnRemoveClick = (id) => {\n\t\t// gui du lieu ve server\n\t\t// console.log(id);\n\t\tlet db = database.ref('Notes/');\n\n\t\tdb.child(id).remove();\n\t\t// cap nhat state\n\t\tthis.setState({\n\t\t\ttodos: this.state.todos.filter((value) => value.id !== id)\n\t\t})\n\n\t\t// thong bao thanh cong\n        this.getAlert({\n            type : 'success',\n            headline : 'Success',\n            message : 'Remove success!'\n\t\t})\n\t}\n\n\t// ======================= COMPLETED TODO ===========================\n\ttodoClick = (item) => {\n\n\t\t// gui du lieu\n\t\tlet child = database.ref('Notes/' + item.id);\n\n\t\tchild.update({\n\t\t\tcompleted : item.completed\n\t\t})\n\n\t\t// cap nhat state\n\t\tlet arrayData = [...this.state.todos];\n\n\t\tarrayData.map((value, key) => {\n\t\t\tif (value.id === item.id)\n\t\t\t{\n\t\t\t\tvalue.completed = !value.completed;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\ttodos : arrayData\n\t\t})\n\n\t\t// thong bao thanh cong\n        this.getAlert({\n            type : 'success',\n            headline : 'Success',\n            message : 'Edit success!'\n\t\t})\n\t}\n\n\t// =============================== ALERT LIST =======================\n\n\tgetAlert = (alert) => {\n\t\tthis.setState({\n\t\t\talert : alert\n\t\t})\n\t}\n\n\trenderAlert = () => {\n\t\t// console.log(this.state.alert);\n\t\tif (this.state.alert === null)\n\t\t{\n\t\t\t// khong lam gi\n\t\t}\n\t\telse{\n\t\t\treturn <Notifier getAlert={(alert) => this.getAlert(alert)} alert={this.state.alert}/>\n\t\t}\n\t}\n\n\t// =============================== SEARCH ===========================\n\tbtnSearchClick = (value) => {\n\t\tthis.setState({\n\t\t\tsearch : value\n\t\t});\n\t}\n\n\t// ============================== SORT =============================\n\n\ttoggleSort = () => {\n\t\t// console.log(sortValue);\n\t\tlet temp = this.state.sortByPriority;\n\n\t\ttemp.status = !temp.status;\n\n\t\tif (temp.status === true)\n\t\t{\n\t\t\ttemp.type = !temp.type;\n\t\t}\n\t\tthis.setState({\n\t\t\tsortByPriority : temp\n\t\t})\n\t}\n\n\t// =============================== RENDER ===========================\n\t\n\tcomponentWillMount() {\n\t\tthis.reUpdateDatabase();\n\t}\n\t\n\trender() {\n\t\tlet arrayData = [];\n\t\t// xu li du lieu khi search\n\t\tif (this.state.search !== '')\n\t\t{\n\t\t\tarrayData = this.state.todos.filter((value) => value.job.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarrayData = [...this.state.todos];\n\t\t}\n\t\tconsole.log(this.state.todos);\n\n\t\t// xu li sort\n\t\tif (this.state.sortByPriority.status === true)\n\t\t{\n\t\t\tarrayData.sort((a, b) => {\n\t\t\t\tif (this.state.sortByPriority.type === true)\n\t\t\t\t\treturn parseInt(a.priority) - parseInt(b.priority);\n\t\t\t\telse\n\t\t\t\t\treturn -(parseInt(a.priority) - parseInt(b.priority));\n\t\t\t})\n\t\t}\n\t\t\n\t\tconsole.log('changed');\n\t\t\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\n\t\t\t\t<div id={\"dim-screen\" + this.dim_screen()}></div>\n\n\t\t\t\t{/* comp header */}\n\t\t\t\t<Header />\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{/* comp search  and sort */}\n\t\t\t\t\t<Search btnAddClick={() => this.toggleAddDialog()} btnSearchClick={(searchValue) => this.btnSearchClick(searchValue)}/>\n\n\t\t\t\t\t{/* comp todos list */}\n\t\t\t\t\t<TodoList \n\t\t\t\t\t\tdata={arrayData} \n\t\t\t\t\t\tbtnEditClick={(id) => this.btnEditClick(id)}\n\t\t\t\t\t\tbtnRemoveClick={(id) => this.btnRemoveClick(id)} \n\t\t\t\t\t\ttodoClick={(item) => this.todoClick(item)}\n\t\t\t\t\t\tsort={this.state.sortByPriority}\n\t\t\t\t\t\ttoggleSort={() => this.toggleSort()}/>\n\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.renderDialogAdd()\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.renderDialogEdit()\n\t\t\t\t\t}\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"notifier\">\n\t\t\t\t{\n\t\t\t\t\tthis.renderAlert()\n\t\t\t\t}\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}